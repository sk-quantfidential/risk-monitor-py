[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "risk-monitor"
version = "0.1.0"
description = "Risk monitoring service for trading ecosystem"
authors = [
    {name = "Trading Ecosystem Team", email = "team@quantfidential.com"},
]
dependencies = [
    # FastAPI and HTTP server
    "fastapi>=0.120.0",
    "uvicorn[standard]>=0.36.0",

    # Pydantic v2 with settings
    "pydantic>=2.11.9",
    "pydantic-settings>=2.10.1",

    # gRPC with async support and health checking
    "grpcio>=1.76.0",
    "grpcio-tools>=1.76.0",
    "grpcio-status>=1.76.0",
    "grpcio-health-checking>=1.76.0",
    "grpcio-reflection>=1.76.0",

    # Connect protocol for browser clients
    "connect-python>=0.5.0",

    # Async utilities and concurrency
    "anyio>=4.11.0",
    "asyncio-mqtt>=0.16.2",

    # Logging and observability
    "structlog>=24.4.0",
    "prometheus-client>=0.23.1",
    "opentelemetry-api>=1.37.0",
    "opentelemetry-sdk>=1.37.0",
    "opentelemetry-instrumentation-fastapi>=0.58b0",
    "opentelemetry-instrumentation-grpc>=0.58b0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.37.0",

    # Data persistence via risk-data-adapter
    "risk-data-adapter @ file:///home/skingham/Projects/Quantfidential/trading-ecosystem/risk-data-adapter-py",

    # HTTP client and utilities
    "httpx>=0.28.1",
    "tenacity>=9.1.2",

    # Data validation and serialization
    "orjson>=3.11.3",
    "msgpack>=1.1.0",

    # Protobuf schemas (local path for development)
    "trading-ecosystem-schemas @ file:///home/skingham/Projects/Quantfidential/trading-ecosystem/protobuf-schemas/gen/python",
]
requires-python = ">=3.13"

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "pytest-grpc>=0.8.0",
    "coverage>=7.11.0",
    
    # HTTP testing
    "httpx>=0.28.1",
    "pytest-httpx>=0.30.0",

    # gRPC testing utilities
    "grpcio-testing>=1.68.0",

    # Test data and mocking
    "factory-boy>=3.3.0",
    "freezegun>=1.5.5",
    "responses>=0.25.0",

    # Code quality and formatting
    "ruff>=0.13.1",
    "mypy>=1.13.0",
    "black>=25.9.0",

    # Additional development tools
    "pre-commit>=4.0.0",
    "bandit>=1.8.6",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "src/risk_monitor/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/risk_monitor"]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I"]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=risk_monitor",
    "--cov-report=term-missing",
    "--cov-fail-under=85",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
